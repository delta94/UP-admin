language: python
# xenial je potreba pro fungovani pythonu 3.7
dist: xenial
python: '3.7'
node_js: '10'
services:
- postgresql
env:
- MOZ_HEADLESS=1
addons:
  firefox: latest
  postgresql: '11'
before_install:
  # pridani ceskeho balicku pro funkcni CZ v databazi
  - source scripts/shell/postgresql_cs.sh
install:
  # nainstaluj geckodriver pro selenium testovani
  - source scripts/shell/install_geckodriver.sh

  # spust skripty pro upravu souboru
  - source scripts/shell/create_npmrc.sh
  - source scripts/shell/string_substitution.sh

  # nainstaluj JS zavislosti
  - nvm install 10.16.0
  - npm i -g npm@~6.9.0
  - npm install -g yarn@~1.16.0
  - yarn install

  # nainstaluj Python zavislosti
  - pip install pipenv
  - pipenv install --dev

  # vypis konfigurace prostredi
  - node --version && npm --version && yarn --version && python --version && pipenv --version && psql --version
script:
  # vytvor DB
  - psql -c 'create database travis_ci_test;' -U postgres

  # priprav Django aplikaci
  - source scripts/shell/release_tasks.sh

  # proved testy a spocitej pokryti kodu
  - coverage run -a manage.py test
  - coverage run -a manage.py behave --stage=api --format=progress3
  - coverage run -a manage.py behave --stage=ui --format=progress3
after_success:
  # posli pokryti kodu do codecov
  - codecov --token=$CODECOV_TOKEN

  # vycisteni od testovacich dat a zavislosti
  - rm -rf geckodriver geckodriver.log coverage.xml

  # vytvoreni souboru frontend.zip se sestavenym frontendem (vcetne template) pro nahrani na GH
  - zip -r frontend.zip frontend/dist admin/templates/react-autogenerate.html
notifications:
  email: false
  slack:
    secure: kNfvnpEk/TDNyqA6ueJ4cjpAtHKhoDp1sGLuhbj2KHYy4kivA1gDcWiF/Hdp9hAGlCiYVoMrY+dETyFY+zdwJtHbAolAEY0KGeb+Nwy1frU2aFSywbxC/CrnOHNCboTiOEpPivWpX5NAhypAlT0FTN5IFnYfbAkl+u0bnWIXbtxMDDxcV8PnN1IucKAvJeC6FPa7l4dPVmpe8dc0lsDPLD8713O+UG+I2d8CPP4yoYIgqdzLjd9zr05/albSXCXz+MjSfoA2QVfYRIpw0NyegMNdwChdBOTP9xds2D7P0xjLYhPVz98y2i4SyBzZcj+JXRYeA6Voi4WPAKeQHUJunA/dpEUZ/Rt2jIeNBAQxOUmRH+vmhKq+c9OwzeOfNUk7gZHxMFs3MEwPtDy62O9KmazzDDzr5hOCOqKboiGQONWt7Rp1yv4jzxlVZ6OxvzDF/COWnQLOIjVBzjSFIQH6LO5Gz/01ZQAqmtaZoWBb8xr3aebXDbrsPO6YSJZMyfXl4mRcMUGmGpEn1600jACpOKWED5NheRqIZnkSHBT/EurjFSXm7O+GztrPB14m3mBFn4o9xaQrkx35Zop0ZFf33w/UA+CeJ1jMdmArXF7RcNNcWQcZG8KbkIVj2qYUNY7sPjx+3K4B604jaAIj/Iwyoa+xQud0dR4zGZjcNzjRRPk=
deploy:
- provider: releases
  api_key: $GH_API_KEY
  file: frontend.zip
  skip_cleanup: true
  on:
    tags: true
- provider: heroku
  api_key: $HEROKU_API_KEY
  app: uspesnyprvnacek-testing
  skip_cleanup: true
  on:
    all_branches: true
- provider: heroku
  api_key: $HEROKU_API_KEY
  app: uspesnyprvnacek-staging
  skip_cleanup: true
  on:
    tags: true
- provider: heroku
  api_key: $HEROKU_API_KEY
  app: uspesnyprvnacek
  skip_cleanup: true
  on:
    tags: true
after_deploy:
  # po prvnim deploy (GH) smaz frontend.zip, po ostatnich deploy uz nic nedelej
  - rm -f frontend.zip
